[
    {
        "id": "2223dd71286e972f",
        "type": "tab",
        "label": "If-statement",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3e96ad675dd194f3",
        "type": "inject",
        "z": "2223dd71286e972f",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "fda6e8b7a64bcd30"
            ]
        ]
    },
    {
        "id": "9720e6e4634c7287",
        "type": "image",
        "z": "2223dd71286e972f",
        "name": "Circuit Diagram",
        "width": "251",
        "data": "payload.result.circuit_diagram",
        "dataType": "msg",
        "thumbnail": false,
        "active": true,
        "pass": false,
        "outputs": 0,
        "x": 700,
        "y": 100,
        "wires": []
    },
    {
        "id": "20a1b5b84956a621",
        "type": "debug",
        "z": "2223dd71286e972f",
        "name": "Measure",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.result.measure",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 680,
        "y": 360,
        "wires": []
    },
    {
        "id": "e12606c749974d74",
        "type": "with-statement",
        "z": "2223dd71286e972f",
        "name": "with-statement",
        "info": "The with statement can be given an assignment target which is itself a context manager that can be stored and subsequently used to create an else block, which is executed whenever the contents of the if block are not executed.\n                \nIn the example below, we initialize registers with two qubits and two classical bits. We apply a Hadamard gate to the first qubit and measure it. If the result is 1, then we apply a Hadamard gate on the second qubit; otherwise, we apply an X gate on the second qubit. Finally, we measure the second qubit as well.",
        "x": 360,
        "y": 680,
        "wires": [
            [
                "19c6124e93d1e811",
                "f3aed82d54b1e4c5",
                "46240aac438e1a21"
            ]
        ]
    },
    {
        "id": "19c6124e93d1e811",
        "type": "image",
        "z": "2223dd71286e972f",
        "name": "Circuit Diagram",
        "width": "251",
        "data": "payload.result.circuit_diagram",
        "dataType": "msg",
        "thumbnail": false,
        "active": true,
        "pass": false,
        "outputs": 0,
        "x": 740,
        "y": 580,
        "wires": []
    },
    {
        "id": "f3aed82d54b1e4c5",
        "type": "debug",
        "z": "2223dd71286e972f",
        "name": "Measure",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.result.measure",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 740,
        "y": 940,
        "wires": []
    },
    {
        "id": "fda6e8b7a64bcd30",
        "type": "if-statement",
        "z": "2223dd71286e972f",
        "name": "If-statement",
        "info": "The if statement is used to conditionally perform operations based on the value of a classical bit or register.\n            \nIn the example below, we apply a Hadamard gate to a qubit and measure it. If the result is 1, then we apply an X gate on the qubit, which has the effect of flipping it back to the 0 state. We then measure the qubit again. The resulting measurement outcome should be 0 with 100% probability.",
        "x": 370,
        "y": 140,
        "wires": [
            [
                "9720e6e4634c7287",
                "20a1b5b84956a621",
                "e12606c749974d74"
            ]
        ]
    },
    {
        "id": "46240aac438e1a21",
        "type": "condition-classical-registers",
        "z": "2223dd71286e972f",
        "name": "condition-classical-registers",
        "info": "In addition to conditioning on a single classical bit, it's also possible to condition on the value of a classical register composed of multiple bits.\n\n In the example below, we apply Hadamard gates to two qubits and measure them. If the result is 01, that is, the first qubit is 1 and the second qubit is 0, then we apply an X gate to a third qubit. Finally, we measure the third qubit. Note that for clarity, we chose to specify the state of the third classical bit, which is 0, in the if condition. In the circuit drawing, the condition is indicated by the circles on the classical bits being conditioned on. A black circle indicates conditioning on 1, while a white circle indicates conditioning on 0.",
        "x": 420,
        "y": 1080,
        "wires": [
            [
                "d99482f531bf2aef",
                "9519d5d98730e091"
            ]
        ]
    },
    {
        "id": "d99482f531bf2aef",
        "type": "image",
        "z": "2223dd71286e972f",
        "name": "Circuit Diagram",
        "width": "251",
        "data": "payload.result.circuit_diagram",
        "dataType": "msg",
        "thumbnail": false,
        "active": true,
        "pass": false,
        "outputs": 0,
        "x": 760,
        "y": 1100,
        "wires": []
    },
    {
        "id": "9519d5d98730e091",
        "type": "debug",
        "z": "2223dd71286e972f",
        "name": "Measure",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.result.measure",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 780,
        "y": 1440,
        "wires": []
    }
]