[
    {
        "id": "2223dd71286e972f",
        "type": "tab",
        "label": "Benchmarking-Complexity-Theory-circuits",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3e96ad675dd194f3",
        "type": "inject",
        "z": "2223dd71286e972f",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "e251543151bea689"
            ]
        ]
    },
    {
        "id": "9720e6e4634c7287",
        "type": "image",
        "z": "2223dd71286e972f",
        "name": "",
        "width": "600",
        "data": "payload.result.circuit_diagram",
        "dataType": "msg",
        "thumbnail": false,
        "active": true,
        "pass": false,
        "outputs": 0,
        "x": 740,
        "y": 100,
        "wires": [],
        "info": "The circuit library also includes circuits believed to be hard to simulate classically, such as instantaneous quantum polynomial (IQP) \r\ncircuits. These circuits sandwich certain diagonal gates (in the computational basis) between blocks of Hadamard gates.\r\nOther circuits include GroverOperator for use in Grover's algorithm, and the FourierChecking circuit for the Fourier checking problem.\r\n See these circuits in Particular quantum circuits in the circuit library API documentation.\r\n\r\n"
    },
    {
        "id": "79f531ac9a9e5578",
        "type": "debug",
        "z": "2223dd71286e972f",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 100,
        "y": 260,
        "wires": []
    },
    {
        "id": "e251543151bea689",
        "type": "Benchmarking-and-complexity-theory-circuit",
        "z": "2223dd71286e972f",
        "name": "Benchmarking-and-complexity-theory-circuit",
        "info": "Benchmarking circuits give us a sense of how well our hardware is actually working\n           and complexity-theory circuits help us understand how difficult the problems we want to\n          solve are.\n          \nFor example, the \"quantum volume\" benchmark measures how accurately a quantum computer \n          executes a type of random quantum circuit. The score of the quantum computer increases\n           with the size of the circuit it can reliably run. This takes into account all aspects \n           of the computer, including qubit count, instruction fidelity, qubit connectivity, and \n           the software stack transpiling and post-processing results. Read more about quantum \n           volume in the original quantum volume paper https://arxiv.org/abs/1811.12926.",
        "x": 390,
        "y": 100,
        "wires": [
            [
                "9720e6e4634c7287",
                "79f531ac9a9e5578"
            ]
        ]
    }
]