[
    {
        "id": "3a6aa99c128988be",
        "type": "tab",
        "label": "流程 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "22a00dfb063e9174",
        "type": "VarQITE",
        "z": "3a6aa99c128988be",
        "name": "VarQITE Algorithm",
        "hamiltonian_data": "[\"ZZ\", \"IX\", \"XI\"]",
        "hamiltonian_coeffs": "[-0.2, -1, -1]",
        "ansatz": "EfficientSU2",
        "evolution_time": "5.0",
        "reps": "1",
        "x": 650,
        "y": 180,
        "wires": [
            [
                "ce02e50d11c113a1",
                "2ecea701ab79d263",
                "294ea2526a0331f4"
            ]
        ],
        "info": "# **What is VarQITE Algorithm ?**\r\nThe VarQuantumImaginaryTimeEvolution algorithm is a computational method used in quantum computing for simulating the dynamics of quantum systems. It focuses on efficiently calculating the ground state (lowest energy state) properties of quantum systems, which is crucial for various applications in materials science, chemistry, and physics.\r\n\r\nIn VarQITE, the algorithm iteratively evolves an initial trial wavefunction using imaginary time evolution techniques. This process gradually improves the wavefunction towards the ground state of the Hamiltonian. By leveraging quantum superpositions and entanglement, VarQITE aims to efficiently compute properties such as energy levels and ground state wavefunctions that are crucial in fields like materials science, chemistry, and physics.\r\n\r\nCompared to classical methods, VarQITE holds potential advantages in terms of computational efficiency for certain classes of problems, thanks to its ability to exploit quantum parallelism and perform complex calculations more effectively.\r\n\r\n## **Input**\r\n\r\n### **Hamiltonian**\r\nThe Hamiltonian represents the total energy of the system and dictates its evolution over time.\r\n\r\nIn the node editor, you can set the Pauli Operators and their coefficeints for the hamiltonian.\r\n\r\n### **Ansatz**\r\nIn the node editor, you can choose 3 different type of ansatz constructor and the number of repetitions.\r\n\r\nThe default constructor is __EfficientSU2__ and the default number of repetition is **1**.\r\n\r\n<span style=\"color:red;\">Notice: Although increasing the number of repetitions can yield more precise results, it also exponentially increases the required computational time and resources, and may lead to over-optimization towards local minima. Therefore, it is recommended to use only 1 repetition.</span>\r\n\r\n### **Evolution time**\r\nIn the node editor, you can set the time of evolution.\r\n\r\nThe default evolution time is 5.0."
    },
    {
        "id": "c9066fadf10661a1",
        "type": "inject",
        "z": "3a6aa99c128988be",
        "name": "Start Calculation",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 320,
        "y": 180,
        "wires": [
            [
                "22a00dfb063e9174"
            ]
        ]
    },
    {
        "id": "ce02e50d11c113a1",
        "type": "image",
        "z": "3a6aa99c128988be",
        "name": "The expectation values of the Hamiltonian over time",
        "width": "480",
        "data": "payload.result.result_image",
        "dataType": "msg",
        "thumbnail": false,
        "active": true,
        "pass": false,
        "outputs": 0,
        "x": 1170,
        "y": 580,
        "wires": [],
        "info": "This diagram shows how the expectation values of the Hamiltonian (i.e. the energy) decreases towards the system's ground state overtime."
    },
    {
        "id": "2ecea701ab79d263",
        "type": "image",
        "z": "3a6aa99c128988be",
        "name": "Variational Ansatz for Hamiltonian Evolution",
        "width": "360",
        "data": "payload.result.ansatz_image",
        "dataType": "msg",
        "thumbnail": false,
        "active": true,
        "pass": false,
        "outputs": 0,
        "x": 1130,
        "y": 180,
        "wires": [],
        "info": "# What is Ansatz ?\r\nAnsatz is a guessed form of the quantum state (such as a wavefunction) typically represented as a parameterized quantum circuit. A parameterized quantum circuit is a sequence of quantum gates parametrized by variables, which can be adjusted to approximate or optimize the ground state of the Hamiltonian. The Ansatz aims to represent the ground state of the Hamiltonian using finite resources, such as the number of qubits and gate operations, which may be prohibitively expensive or infeasible with classical computations.\r\n\r\nThe relationship between Ansatz and Hamiltonian is reflected in the design of the Ansatz itself. By designing an appropriate parameterized quantum circuit (Ansatz), one can efficiently approximate or compute properties of the target quantum system under given resource constraints.\r\n\r\nIn our example, we use class _qiskit.circuit.library.EfficientSU2_ to construct ansatz for the hamiltonian. The diagram shows the parameterized circuit of the ansatz"
    },
    {
        "id": "294ea2526a0331f4",
        "type": "debug",
        "z": "3a6aa99c128988be",
        "name": "Ground state energy",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.result.ground_state_energy",
        "targetType": "msg",
        "statusVal": "payload.result.ground_state_energy",
        "statusType": "auto",
        "x": 1080,
        "y": 480,
        "wires": [],
        "info": "The calculated ground state energy of the quantum system"
    }
]